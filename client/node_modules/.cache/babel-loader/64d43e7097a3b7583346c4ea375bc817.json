{"ast":null,"code":"var _jsxFileName = \"/Users/sparshbohra/Desktop/hackduke/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport fire from \"./fire\";\nimport Form from \"./Components/Form/Form\";\nimport Login from \"./Components/Login/Login\";\nimport Register from \"./Components/Register/Register\";\nimport Publicfeed from \"./Components/Publicfeed/Publicfeed\";\nimport University from \"./Components/University/University\";\nimport Homepage from \"./Components/Homepage/Homepage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmaiil('');\n    setPassword('');\n  };\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = () => {\n    clearErrors();\n    fire.auth().signInWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/wrong-passord\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    fire.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n\n        case \"auth/weak-passord\":\n          setPasswordError(err.message);\n          break;\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      email: email,\n      setEmail: setEmail,\n      password: password,\n      setPassword: setPassword,\n      handleLogin: handleLogin,\n      handleSignup: handleSignup,\n      hasAccount: hasAccount,\n      setHasAccount: setHasAccount,\n      emailError: emailError,\n      passwordError: passwordError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this) // <Router>\n  //   <Switch>\n  //     <Route exact path=\"/\">\n  //       <Homepage />\n  //     </Route>\n  //     <Route path=\"/Login\">\n  //       <Login />\n  //     </Route>\n  //     <Route path=\"/Register\">\n  //       <Register />\n  //     </Route>\n  //     <Route path=\"/University\">\n  //       <University />\n  //     </Route>\n  //     <Route path=\"/Form\">\n  //       <Form />\n  //     </Route>\n  //     <Route path=\"/Publicfeed\">\n  //       <Publicfeed />\n  //     </Route>\n  //   </Switch>\n  // </Router>\n  ;\n}\n\n_s(App, \"CBZjR6TKvZCyweuUrdx8yLZEzw8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sparshbohra/Desktop/hackduke/client/src/App.js"],"names":["React","useState","useEffect","fire","Form","Login","Register","Publicfeed","University","Homepage","BrowserRouter","Router","Switch","Route","App","user","setUser","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","clearInputs","setEmaiil","clearErrors","handleLogin","auth","signInWithEmailAndPassword","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","handleLogout","signOut","authListener","onAuthStateChanged"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport fire from \"./fire\";\nimport Form from \"./Components/Form/Form\";\nimport Login from \"./Components/Login/Login\";\nimport Register from \"./Components/Register/Register\";\nimport Publicfeed from \"./Components/Publicfeed/Publicfeed\";\nimport University from \"./Components/University/University\";\nimport Homepage from \"./Components/Homepage/Homepage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n    const [user, setUser] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n\n    const clearInputs = () => {\n        setEmaiil('');\n        setPassword('');\n    }\n\n    const clearErrors = () => {\n        setEmailError('');\n        setPasswordError('');\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch(err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-passord\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    };\n\n    const handleSignup = () => {\n        clearErrors();\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch(err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-passord\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    };\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    };\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged((user) => {\n            if(user) {\n                clearInputs();\n                setUser(user);\n            } else {\n                setUser(\"\");\n            }\n        });\n    };\n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    return (\n        <div className = \"App\">\n            <Login\n                email={email}\n                setEmail={setEmail}\n                password={password}\n                setPassword={setPassword}\n                handleLogin={handleLogin}\n                handleSignup={handleSignup}\n                hasAccount={hasAccount}\n                setHasAccount={setHasAccount}\n                emailError={emailError}\n                passwordError={passwordError}\n            />\n        </div>\n    // <Router>\n    //   <Switch>\n    //     <Route exact path=\"/\">\n    //       <Homepage />\n    //     </Route>\n    //     <Route path=\"/Login\">\n    //       <Login />\n    //     </Route>\n    //     <Route path=\"/Register\">\n    //       <Register />\n    //     </Route>\n    //     <Route path=\"/University\">\n    //       <University />\n    //     </Route>\n    //     <Route path=\"/Form\">\n    //       <Form />\n    //     </Route>\n    //     <Route path=\"/Publicfeed\">\n    //       <Publicfeed />\n    //     </Route>\n    //   </Switch>\n    // </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}